version: '3'
services:
  backend:
    build: Backend
    command: npm run start
    volumes:
      - ./Backend/app:/usr/app/
      - ./Backend/app/node_modules:/usr/app/node_modules
    ports:
      - ${BACKEND_PORT}
    networks:
      - mycustomNetwork
  frontend:
    env_file: .env
    build: Frontend
    command: npm run deploy:web:local
    volumes:
      - ./Frontend/app:/usr/app/
      - ./Frontend/app/node_modules:/usr/app/node_modules
      - ./Frontend/app/web-build:/usr/app/web-build
    expose:
      - ${FRONTEND_PORT}
    environment:
      BACKEND_URL: ${DOMAIN_PRE}://${DOMAIN}${DOMAIN_PATH}${DOMAIN_BACKEND}
    networks:
      - mycustomNetwork

  app3:
    image: jwilder/whoami
    networks:
      - mycustomNetwork
      - nginx-proxy_reverse-proxy

  innerProxy:
    container_name: innerProxy
    # to get latest nginx use:
    #image: nginx:stable
    image: nginx:1.20.1
    depends_on:
      - frontend
      - backend
    volumes:
      - ./InnerProxy/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./InnerProxy/nginx/httpProxy.conf:/etc/nginx/templates/proxy.conf.template
      - ./InnerProxy/nginx/backendLocation.conf:/etc/nginx/templates/backendLocation.conf.template
      - ./InnerProxy/nginx/backendUpstream.conf:/etc/nginx/templates/backendUpstream.conf.template
      - ./InnerProxy/nginx/frontendLocation.conf:/etc/nginx/templates/frontendLocation.conf.template
      - ./InnerProxy/nginx/frontendUpstream.conf:/etc/nginx/templates/frontendUpstream.conf.template
    env_file: .env
    environment:
      DOMAIN: ${DOMAIN}
      DOMAIN_PATH: ${DOMAIN_PATH}
      BACKEND_PORT: ${BACKEND_PORT}
      DOMAIN_BACKEND: ${DOMAIN_BACKEND}
      DOMAIN_FRONTEND: ${DOMAIN_FRONTEND}
    restart: always
    expose:
      - "4000"
    networks:
      - mycustomNetwork
      - nginx-proxy_reverse-proxy

networks:
  mycustomNetwork:
  nginx-proxy_reverse-proxy:
    external: true